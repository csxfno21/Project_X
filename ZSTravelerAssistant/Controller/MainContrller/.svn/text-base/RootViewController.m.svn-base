//
//  RootViewController.m
//  ZSTravelerAssistant
//
//  Created by 严道秋 on 13-7-23.
//  Copyright (c) 2013年 com.szmap. All rights reserved.
//

#import "RootViewController.h"
#import "InfoViewController.h"
#import "RouteViewController.h"
#import "MyNavController.h"
#import "RecommendIngManager.h"
#import "TeamServiceViewController.h"
#import "TeamManager.h"
#import "TeamFriendShowViewController.h"

@interface RootViewController ()

@end

@implementation RootViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    //启动 地位
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(downLoadSuccess:) name:DOWNLOAD_IMAGE_SCUUESS object:nil];
    [[MapManager sharedInstanced] registerMapManagerNotification:self];
    [[MapManager sharedInstanced] startLocation];
    
    [self.topTitle setText:[Language stringWithName:ROOT_TOP_TITLE]];
    [self.topLocationLabel setText:[Language stringWithName:ROOT_TOP_LOCATION]];
    
    [self.page_one_title setText:[Language stringWithName:ROOT_PAGE_ONE_TITLE]];
    [self.page_one_subtitle_one setText:[Language stringWithName:ROOT_PAGE_ONE_SUBTITLE_ONE]];
    [self.page_one_subtitle_two setText:[Language stringWithName:ROOT_PAGE_ONE_SUBTITLE_TWO]];
    
    [self.page_two_title setText:[Language stringWithName:ROOT_PAGE_TWO_TITLE]];
    [self.page_two_subtitle_one setText:[Language stringWithName:ROOT_PAGE_TWO_SUBTITLE_ONE]];
    [self.page_two_subtitle_two setText:[Language stringWithName:ROOT_PAGE_TWO_SUBTITLE_TWO]];
    
    [self.page_three_title setText:[Language stringWithName:ROOT_PAGE_THREE_TITLE]];
    [self.page_three_subtitle_one setText:[Language stringWithName:ROOT_PAGE_THREE_SUBTITLE_ONE]];
    [self.page_three_subtitle_two setText:[Language stringWithName:ROOT_PAGE_THREE_SUBTITLE_TWO]];
    
    [self.page_four_title setText:[Language stringWithName:ROOT_PAGE_FOUR_TITLE]];
    [self.page_four_subtitle_one setText:[Language stringWithName:ROOT_PAGE_FOUR_SUBTITLE_ONE]];
    [self.page_four_subtitle_two setText:[Language stringWithName:ROOT_PAGE_FOUR_SUBTITLE_TWO]];
    
    pageControl = [[SMPageControl alloc] initWithFrame:CGRectMake(0, self.infoBtn.frame.origin.y - 20, 320, 10)];
    if(!iPhone5)
    {
        pageControl.frame = CGRectMake(0, 240, 320, 10);
    }

    [[RecommendIngManager sharedInstance] requestGetMianScrolSpots:self];
    
    
    self.mScrollView.delegate = self;
    
    pageControl.alignment = SMPageControlAlignmentCenter;
    pageControl.pageIndicatorImage = [UIImage imageNamed:@"page-nom.png"];
    pageControl.currentPageIndicatorImage = [UIImage imageNamed:@"page-sel.png"];
    pageControl.userInteractionEnabled = NO;
//    [pageControl addTarget:self action:@selector(pageControl:) forControlEvents:UIControlEventValueChanged];
    [self.view addSubview:pageControl];
}
- (void)didUpdateCurrentSenic:(SCENIC_TYPE)scenic
{
    NSString *locationTitle = [Language stringWithName:ROOT_TOP_LOCATION];
    switch (scenic)
    {
        case SCENIC_MXL:
        {
            locationTitle = [NSString stringWithFormat:@"%@%@",locationTitle,[Language stringWithName:MXL_SPOT]];
            break;
        }
        case SCENIC_LGS:
        {
            locationTitle = [NSString stringWithFormat:@"%@%@",locationTitle,[Language stringWithName:LGS_SPOT]];
            break;
        }
        case SCENIC_ZSL:
        {
            locationTitle = [NSString stringWithFormat:@"%@%@",locationTitle,[Language stringWithName:ZSL_SPOT]];
            break;
        }
        case SCENIC_IN:
        {
            locationTitle = [NSString stringWithFormat:@"%@%@",locationTitle,[Language stringWithName:ZSFJQ_SPOT]];
            break;
        }
        case SCENIC_OUT:
        {
            locationTitle = [NSString stringWithFormat:@"%@%@",locationTitle,[Language stringWithName:JQW_STR]];
            break;
        }
        default:
            break;
    }
    self.topLocationLabel.text = locationTitle;
}
- (void)initScrollerView:(NSArray*)spotCache
{
    for (UIView *view in self.mScrollView.subviews)
    {
        if([view isKindOfClass:[UIImageView class]]){[view removeFromSuperview];}
    }
    int pageCount = spotCache.count;
    if(pageCount > 1)
    {
       pageCount += 2;
        ZS_RecommendImg_entity *fentity = [spotCache lastObject];
        UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, self.mScrollView.bounds.size.width, self.mScrollView.bounds.size.height)];
        UIActivityIndicatorView *loadingView = [[[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray] autorelease];
        loadingView.frame = CGRectMake(0, 0, self.mScrollView.bounds.size.width, self.mScrollView.bounds.size.height);
        
        loadingView.tag = 2001;
        [imageView addSubview:loadingView];
        imageView.tag = 2000;
        UIImage *img = [[NetFileLoadManager sharedInstanced] loadImageByURL:fentity.ImgUrl withDelegate:self withID:fentity.ID withImgName:fentity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND];
        if(img)
        {
            [imageView setImage:img];
        }
        else
        {
            [loadingView startAnimating];
        }
        
        [self.mScrollView addSubview:imageView];
        SAFERELEASE(imageView)
        
        ZS_RecommendImg_entity *sentity = [spotCache objectAtIndex:0];
        UIImageView *simageView = [[UIImageView alloc] initWithFrame:CGRectMake((pageCount-1) * self.mScrollView.bounds.size.width, 0, self.mScrollView.bounds.size.width, self.mScrollView.bounds.size.height)];
        UIActivityIndicatorView *sloadingView = [[[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray] autorelease];
        sloadingView.frame = CGRectMake(0, 0, self.mScrollView.bounds.size.width, self.mScrollView.bounds.size.height);
        
        sloadingView.tag = 2003;
        [simageView addSubview:sloadingView];
        simageView.tag = 2002;
        UIImage *simg = [[NetFileLoadManager sharedInstanced] loadImageByURL:sentity.ImgUrl withDelegate:self withID:sentity.ID withImgName:sentity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND];
        if(simg)
        {
            [simageView setImage:simg];
        }
        else
        {
            [sloadingView startAnimating];
        }
        
        [self.mScrollView addSubview:simageView];
        SAFERELEASE(simageView)
    }
    self.mScrollView.contentSize = CGSizeMake(320 * pageCount, 0);
    [self.mScrollView setContentOffset:CGPointMake(1 * 320, 0) animated:NO];
    for (int i = 0;i <spotCache.count ; i++)
    {
        ZS_RecommendImg_entity *entity = [spotCache objectAtIndex:i];
        float x = pageCount > 2 ? (i + 1) * self.mScrollView.bounds.size.width : i * self.mScrollView.bounds.size.width;
        UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(x, 0, self.mScrollView.bounds.size.width, self.mScrollView.bounds.size.height)];
        UIActivityIndicatorView *loadingView = [[[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray] autorelease];
        loadingView.frame = CGRectMake(0, 0, self.mScrollView.bounds.size.width, self.mScrollView.bounds.size.height);
        
        loadingView.tag = 1000 + entity.ID;
        [imageView addSubview:loadingView];
        imageView.tag = entity.ID;
        UIImage *img = [[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND];
        if(img)
        {
            [imageView setImage:img];
        }
        else
        {
            [loadingView startAnimating];
        }

        [self.mScrollView addSubview:imageView];
        SAFERELEASE(imageView)
    }
}

- (void)netConnect:(id)sender
{
    NSArray *cache = [RecommendIngManager sharedInstance].spotsCache;
    if(ISARRYCLASS(cache) && cache.count > 0)
    {
        pageControl.numberOfPages = cache.count;
        pageControl.currentPage = 0;
        [self initScrollerView:cache];
    }
}

//- (void)pageControl:(id)sender
//{
//    int page = pageControl.currentPage;
//    CGPoint newOffset = CGPointMake(page * 320, 0);
//    [self.mScrollView setContentOffset:newOffset animated:YES];
//}
#pragma mark- updateLanguage
- (void)updateLanguage:(id)sender
{
    
}
#pragma mark - scrollerDelegate
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    if(scrollView.contentSize.width > 320)
    {
        float offsetx = scrollView.contentOffset.x;
        int page = offsetx / 320;
        if(page == 0)
        {
            page = scrollView.contentSize.width / 320 - 2;
            [self.mScrollView setContentOffset:CGPointMake(page * 320, 0) animated:NO];
        }
        else if(page == scrollView.contentSize.width / 320 - 1)
        {
            page = 1;
            [self.mScrollView setContentOffset:CGPointMake(page * 320, 0) animated:NO];
        }
        pageControl.currentPage = page - 1;
    }
    else
    {
        float offsetx = scrollView.contentOffset.x;
        int page = offsetx / 320;
        pageControl.currentPage = page;
    }
}

- (IBAction)infoAction:(id)sender
{
    InfoViewController *controller = [[InfoViewController alloc] initWithNibName:@"InfoViewController" bundle:nil];
    [self.navigationController pushViewController:controller animated:YES];
    SAFERELEASE(controller)
}


- (IBAction)routeAction:(id)sender
{
    RouteViewController *controller = [[RouteViewController alloc] initWithNibName:@"RouteViewController" bundle:nil];
    [self.navigationController pushViewController:controller animated:YES];
    SAFERELEASE(controller)
}


- (IBAction)navAction:(id)sender
{
    MyNavController *controller = [[MyNavController alloc] initWithNibName:@"MyNavController" bundle:nil];
    [self.navigationController pushViewController:controller animated:YES];
    SAFERELEASE(controller)
}

- (IBAction)teamAction:(id)sender
{
    if ([TeamManager sharedInstanced].isJoinTeam)
    {
//        [[TeamManager sharedInstanced] teamRequestTeamMembers];
        TeamFriendShowViewController *viewController = [[TeamFriendShowViewController alloc] initWithNibName:@"TeamFriendShowViewController" bundle:nil];
        [self.navigationController pushViewController:viewController animated:YES];
         viewController.tableViewOne.data = [[TeamManager sharedInstanced] getTeamList];
        SAFERELEASE(viewController)
    }
    else
    {
        TeamServiceViewController *viewController = [[TeamServiceViewController alloc] initWithNibName:@"TeamServiceViewController" bundle:nil];
        [self.navigationController pushViewController:viewController animated:YES];
        SAFERELEASE(viewController)
    }
}

#pragma mark - downLoad image Success
- (void)downLoadSuccess:(NSNotification*)notification
{
    int downID = [notification.object intValue];
    NSArray *cache = [RecommendIngManager sharedInstance].spotsCache;
    if(ISARRYCLASS(cache) && cache.count > 0)
    {
        for (int i = 0; i < cache.count; i++)
        {
            ZS_RecommendImg_entity *entity = [cache objectAtIndex:i];
            if(downID == entity.ID)
            {
                if(cache.count > 1)
                {
                    if(i == 0)
                    {
                        UIImageView *fImgView = (UIImageView*)[self.mScrollView viewWithTag:2002];
                        if(fImgView)
                        {
                            [fImgView setImage:[[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND]];
                            UIActivityIndicatorView *floadingView = (UIActivityIndicatorView*)[fImgView viewWithTag:2003];
                            [floadingView stopAnimating];
                        }
                    }
                    else if(i == cache.count - 1)
                    {
                        UIImageView *lImgView = (UIImageView*)[self.mScrollView viewWithTag:2000];
                        if(lImgView)
                        {
                            [lImgView setImage:[[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND]];
                            UIActivityIndicatorView *lloadingView = (UIActivityIndicatorView*)[lImgView viewWithTag:2001];
                            [lloadingView stopAnimating];
                        }
                    }
                }
                UIImageView *imageView = (UIImageView*)[self.mScrollView viewWithTag:downID];
                if(imageView)
                {
                    [imageView setImage:[[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND]];
                    UIActivityIndicatorView *loadingView = (UIActivityIndicatorView*)[imageView viewWithTag:imageView.tag + 1000];
                    [loadingView stopAnimating];
                }
                return;
            }
        }
    }
}

#pragma mark - http call back
- (void)callBackToUI:(HttpBaseResponse *)response
{
    switch (response.cc_cmd_code)
    {
//        case CC_DOWN_IMAGE_RECOMMEND:
//        {
//            if(response.error_code == E_HTTPSUCCEES)
//            {
//                DwonImgResponse *res = (DwonImgResponse*)response;
//                NSArray *cache = [RecommendIngManager sharedInstance].spotsCache;
//                if(ISARRYCLASS(cache) && cache.count > 0)
//                {
//                    for (int i = 0; i < cache.count; i++)
//                    {
//                        ZS_RecommendImg_entity *entity = [cache objectAtIndex:i];
//                        if(res.imgID == entity.ID)
//                        {
//                            if(cache.count > 1)
//                            {
//                                if(i == 0)
//                                {
//                                    UIImageView *fImgView = (UIImageView*)[self.mScrollView viewWithTag:2002];
//                                    if(fImgView)
//                                    {
//                                        [fImgView setImage:[[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND]];
//                                        UIActivityIndicatorView *floadingView = (UIActivityIndicatorView*)[fImgView viewWithTag:2003];
//                                        [floadingView stopAnimating];
//                                    }
//                                }
//                                else if(i == cache.count - 1)
//                                {
//                                    UIImageView *lImgView = (UIImageView*)[self.mScrollView viewWithTag:2000];
//                                    if(lImgView)
//                                    {
//                                        [lImgView setImage:[[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND]];
//                                        UIActivityIndicatorView *lloadingView = (UIActivityIndicatorView*)[lImgView viewWithTag:2001];
//                                        [lloadingView stopAnimating];
//                                    }
//                                }
//                            }
//                            UIImageView *imageView = (UIImageView*)[self.mScrollView viewWithTag:res.imgID];
//                            if(imageView)
//                            {
//                                [imageView setImage:[[NetFileLoadManager sharedInstanced] loadImageByURL:entity.ImgUrl withDelegate:self withID:entity.ID withImgName:entity.ImageName withCmdcode:CC_DOWN_IMAGE_RECOMMEND]];
//                                UIActivityIndicatorView *loadingView = (UIActivityIndicatorView*)[imageView viewWithTag:imageView.tag + 1000];
//                                [loadingView stopAnimating];
//                            }
//                            return;
//                        }
//                    }
//                }
//
//            }
//            break;
//        }
        case CC_GET_MAIN_SCROL_SPOTS:
        {
            if(response.error_code == E_HTTPSUCCEES)
            {
                NSArray *cache = [RecommendIngManager sharedInstance].spotsCache;
                if(ISARRYCLASS(cache) && cache.count > 0)
                {
                    pageControl.numberOfPages = cache.count;
                    pageControl.currentPage = 0;
                    [self initScrollerView:cache];
                }
            }
            break;
        }
        default:
            break;
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)dealloc
{
    [[MapManager sharedInstanced] unRegisterMapManagerNotification:self];
    SAFERELEASE(pageControl)
    [_topTitle release];
    [_mScrollView release];
    [_infoBtn release];
    [_routeBtn release];
    [_navBtn release];
    [_teamBtn release];
    [_topLocationLabel release];
    [_page_one_title release];
    [_page_one_subtitle_one release];
    [_page_one_subtitle_two release];
    [_page_two_title release];
    [_page_two_subtitle_one release];
    [_page_two_subtitle_two release];
    [_page_three_title release];
    [_page_three_subtitle_one release];
    [_page_three_subtitle_two release];
    [_page_four_title release];
    [_page_four_subtitle_one release];
    [_page_four_subtitle_two release];
    [super dealloc];
}
- (void)viewDidUnload
{
    [self setTopTitle:nil];
    [self setMScrollView:nil];
    [self setInfoBtn:nil];
    [self setRouteBtn:nil];
    [self setNavBtn:nil];
    [self setTeamBtn:nil];
    [self setTopLocationLabel:nil];
    [self setPage_one_title:nil];
    [self setPage_one_subtitle_one:nil];
    [self setPage_one_subtitle_two:nil];
    [self setPage_two_title:nil];
    [self setPage_two_subtitle_one:nil];
    [self setPage_two_subtitle_two:nil];
    [self setPage_three_title:nil];
    [self setPage_three_subtitle_one:nil];
    [self setPage_three_subtitle_two:nil];
    [self setPage_four_title:nil];
    [self setPage_four_subtitle_one:nil];
    [self setPage_four_subtitle_two:nil];
    [super viewDidUnload];
}
@end
